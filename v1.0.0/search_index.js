var documenterSearchIndex = {"docs":
[{"location":"#BokehServer:-a-Bokeh-server-in-Julia","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"","category":"section"},{"location":"#Goals","page":"BokehServer: a Bokeh server in Julia","title":"Goals","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"It seemed Julia was missing a reactive plot library, meaning one which would react to changes in the data when used with Pluto or IJulia. This package tries to bring these features by relying on the excellent (Bokeh)[https://docs.bokeh.org/en/latest/index.html] library. The latter is basically a python web server with a javascript client. This package reproduces the python server and reuses the javascript part as is. This package's API is loosely similar to its python counterpart.","category":"page"},{"location":"#Getting-Started","page":"BokehServer: a Bokeh server in Julia","title":"Getting Started","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"A number of examples are provided in the examples directory. These usually involve starting a server:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.serve() do\n    BokehServer.line(rand(Float64, 100))\nend","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"One could also create a stand-alone html page:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.html() do\n    BokehServer.line(rand(Float64, 100))\nend","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"We try to keep a similar API to the one provided by Bokeh. The main differences are due to Julia's aversion to instance or class methods. A python call fig.line([1, 2, 3]) becomes line!(fig; y = [1, 2, 3]). In other words:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Julia relies on free functions. Thus the call requires adding the current plot as first argument.\nJulia suggests using a ! when a function mutates its first argument. Thus our free functions:\nwithout a !, will create a plot, feed it to the !-ended free function, finally returning said plot.\nwith a !, will require a plot as first argument. The function usually adds one or more renderers to the plot.\nJulia makes a clear distinction between positional and keyword arguments, whereas python doesn't. We recreated something similar to python's: one will obtain the same plot when writing line!(fig, 1:10, (1:10).^2) or line!(fig; x = 1:10, y = (1:10).^2).","category":"page"},{"location":"#Gallery","page":"BokehServer: a Bokeh server in Julia","title":"Gallery","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Checkout Bokeh's gallery or try the files in the examples directory.","category":"page"},{"location":"#Using-the-Plots-package","page":"BokehServer: a Bokeh server in Julia","title":"Using the Plots package","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"A Plots backend is provided. It relies on a bokeh function being called.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"begin\n    using Plots\n    using BokehServer\n    bokeh()\nend","category":"page"},{"location":"#Using-Jupyter-or-Pluto","page":"BokehServer: a Bokeh server in Julia","title":"Using Jupyter or Pluto","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Example notebooks are examples/jupyter_notebook.ipynb and examples/pluto_notebook.jl.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Using the library requires two initial lines:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"using BokehServer # import our library\n# provide javascript headers to your browser, default port is 5006\nBokehServer.Embeddings.notebook(; port = 4321)","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"note: Initializing a notebook environment\nWe need the notebook call to be the last in the cell! This is so the bokehjs library is added to the browser page.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Any layout or plot returned by a cell is then displayed in the notebook. Changes occurring in julia in other cells will affect this display.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"The following will display a time series, with default indices on the x axis.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"plot = BokehServer.line(; y = randn(Float64, 100) .+ (1:100))","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"We can update the previous cell from another:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"push!(\n    plot.renderers[1].data_source,\n    Dict(\"y\" => randn(Float64, 100) .+ (100:-1:1), \"x\" => 101:200)\n);","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"In the background, a websocket server is created which will synchronize your BokehServer objects in Julia with their typescript counterparts. It will also manage the event mechanism provided by BokehServer.","category":"page"},{"location":"#Starting-a-server-or-creating-a-stand-alone-html-page","page":"BokehServer: a Bokeh server in Julia","title":"Starting a server or creating a stand-alone html page","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Examples abound in the examples directory. They all involve using:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.serve() do\n    plot = figure() # create a plot\n    ...\n    plot # return the plot\nend","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"note: Stand-alone HTML pages\nTo create a stand-alone page, simply replace serve by html.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"note: The do ... end scope\nBokehServer objects should be created strictly within the do ... end scope. This is because of the event mechanism is initialized only within this scope.","category":"page"},{"location":"#Available-plots","page":"BokehServer: a Bokeh server in Julia","title":"Available plots","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"One can create a plot using:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.figure","category":"page"},{"location":"#BokehServer.Plotting.figure","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.figure","text":"figure(;\n    # tool keywords\n    active_drag    :: Union{Nothing, iDrag, String, Model.EnumType{(:auto,)}}                              = :auto\n    active_inspect :: Union{Nothing, iInspectTool, String, Model.EnumType{(:auto,)}, Vector{iInspectTool}} = :auto\n    active_multi   :: Union{Nothing, iGestureTool, String, Model.EnumType{(:auto,)}}                       = :auto\n    active_scroll  :: Union{Nothing, iScroll, String, Model.EnumType{(:auto,)}}                            = :auto\n    active_tap     :: Union{Nothing, iTap, String, Model.EnumType{(:auto,)}}                               = :auto\n    tools          :: Union{String, Vector{Union{iTool, String}}}                                          = \"pan,wheel_zoom,box_zoom,save,reset,help\"\n    tooltips       :: Union{Nothing, iTemplate, String, Vector{Tuple{String, String}}}                     = nothing\n\n    # x-axis keywords\n    x_axis_label    :: Union{Nothing, iBaseText, String}                                            = \"\"\n    x_axis_location :: Union{Nothing, Model.EnumType{(:above, :below)}}                             = :below\n    x_axis_type     :: Union{Nothing, Model.EnumType{(:auto, :linear, :log, :datetime, :mercator)}} = :auto\n    x_minor_ticks   :: Union{Int64, Model.EnumType{(:auto,)}}                                       = :auto\n    x_range         :: Any                                                                          = nothing\n\n    # y-axis keywords\n    y_axis_label    :: Union{Nothing, iBaseText, String}                                            = \"\"\n    y_axis_location :: Union{Nothing, Model.EnumType{(:left, :right)}}                              = :left\n    y_axis_type     :: Union{Nothing, Model.EnumType{(:auto, :linear, :log, :datetime, :mercator)}} = :auto\n    y_minor_ticks   :: Union{Int64, Model.EnumType{(:auto,)}}                                       = :auto\n    y_range         :: Any                                                                          = nothing\n)\n\nCreate a Plot object.\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"The following types of plots are available, with and without the !:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"    <script type=\"text/javascript\" src=\"https://cdn.bokeh.org/bokeh/release/bokeh-VERSION.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://cdn.bokeh.org/bokeh/release/bokeh-gl-VERSION.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-VERSION.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://cdn.bokeh.org/bokeh/release/bokeh-tables-VERSION.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-VERSION.min.js\"></script>","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BOXPLOT","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.boxplot!","category":"page"},{"location":"#BokehServer.Plotting.boxplot!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.boxplot!","text":"boxplot!(\n    plot::Models.Plot,\n    labels,\n    values;\n    direction   :: Symbol          = :vertical,\n    sortby      :: Function        = count,\n    skipmissing :: Bool            = true,\n    ranges      :: Vector{Float64} = [.25, .5, .75],\n    iqr         :: Float64         = 1.5,\n    bar      = (; line_color = :black, fill_color = :lightskyblue),\n    segments = (; line_color = :black),\n    borders  = (; marker = :dash, color = :black),\n    aberrant = (; marker = :circle, color = :lightskyblue),\n)\n\nboxplot!(\n    plot::Models.Plot,\n    boxes::AbstractVector{<:BoxPlotItem};\n    direction   :: Symbol          = :vertical,\n    sortby      :: Function        = count,\n    bar      = (; line_color = :black, fill_color = :lightskyblue),\n    segments = (; line_color = :black),\n    borders  = (; marker = :dash, color = :black),\n    aberrant = (; marker = :circle, color = :lightskyblue),\n)\n\nCreate a boxplot for every label.\n\nThe labels can be sorted by (use argument sortby with a function):\n\ncount: the number of values per box\nmedian: the median of values per box\nkeys: the box key value\n\nBokehServer.html() do\n    labels = [j == 1 ? \"x\" : \"y\" for j = 1:2 for _ = 1:(j*10)]\n    vals   = [(randn(Float64, 10) .+ 10.)..., (randn(Float64, 20) .- 10.)...]\n    BokehServer.boxplot(labels, vals)\nend\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"ANNULARWEDGE","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.annularwedge!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.annularwedge!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.annularwedge!","text":"annularwedge!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    inner_radius :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"inner_radius\",\n    outer_radius :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"outer_radius\",\n    start_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"start_angle\",\n    finish_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"end_angle\",\n    direction  :: Union{BokehServer.Model.EnumType{(:clock, :anticlock)}, AbstractArray} = :anticlock;\n    kwa...\n)\n\nAdds a AnnularWedge glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"ANNULUS","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.annulus!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.annulus!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.annulus!","text":"annulus!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    inner_radius :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"inner_radius\",\n    outer_radius :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"outer_radius\";\n    kwa...\n)\n\nAdds a Annulus glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"ARC","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.arc!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.arc!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.arc!","text":"arc!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    radius     :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"radius\",\n    start_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"start_angle\",\n    finish_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"end_angle\",\n    direction  :: Union{BokehServer.Model.EnumType{(:clock, :anticlock)}, AbstractArray} = :anticlock;\n    kwa...\n)\n\nAdds a Arc glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"AREASTACK","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.areastack!","category":"page"},{"location":"#BokehServer.Plotting.Stacks.areastack!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.Stacks.areastack!","text":"Generate multiple area renderers for levels stacked either left to right or bottom to top.\n\nThe user must provide values for both x and y. Only one of these may be a list of fields.\n\nExample\n\nplot = BokehServer.figure()\nrenderers = areastack!(plot; x = [\"a\", \"b\", \"c\"], y = 0, source = Dict(\"a\"=>[1,2], \"b\" => [3,4], \"c\"=>[5, 6]))\n@assert renderers isa Vector{BokehServer.Models.GlyphRenderer}\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BARSTACK","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.barstack!","category":"page"},{"location":"#BokehServer.Plotting.Stacks.barstack!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.Stacks.barstack!","text":"Generate multiple bar renderers for levels stacked either left to right or bottom to top.\n\nThe user must provide values for both x and y. Only one of these may be a list of fields.\n\nExample\n\nplot = BokehServer.figure()\nrenderers = barstack!(plot; x = [\"a\", \"b\", \"c\"], y = 0, source = Dict(\"a\"=>[1,2], \"b\" => [3,4], \"c\"=>[5, 6]))\n@assert renderers isa Vector{BokehServer.Models.GlyphRenderer}\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BEZIER","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.bezier!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.bezier!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.bezier!","text":"bezier!(\n    plot       :: Models.Plot,\n    x0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x0\",\n    y0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y0\",\n    x1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x1\",\n    y1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y1\",\n    cx0        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cx0\",\n    cy0        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cy0\",\n    cx1        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cx1\",\n    cy1        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cy1\";\n    kwa...\n)\n\nAdds a Bezier glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"CIRCLE","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.circle!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.circle!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.circle!","text":"circle!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\";\n    kwa...\n)\n\nAdds a Circle glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"ELLIPSE","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"OVAL","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ellipse!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.ellipse!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.ellipse!","text":"ellipse!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    width      :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"width\",\n    height     :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"height\",\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0;\n    kwa...\n)\n\nAdds a Ellipse glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.graph!","category":"page"},{"location":"#BokehServer.Plotting.graph!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.graph!","text":"Creates a network graph using the given node, edge and layout provider.\n\nNodes are created using all node_ keywords. These are passed on to a call to BokehServer.Plotting.glyph(BokehServer.Models.Scatter; x...) (as also occurs in BokehServer.scatter!). One can also provide the glyph directly using keyword node.\n\nEdge are created using all edge_ keywords. These are passed on to a call to BokehServer.Plotting.glyph(BokehServer.Models.Multiline; x...) (as also occurs in BokehServer.multiline!). One can also provide the glyph directly using keyword edge.\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.harea!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.harea!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.harea!","text":"harea!(\n    plot       :: Models.Plot,\n    x1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x1\",\n    x2         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x2\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\";\n    kwa...\n)\n\nAdds a HArea glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.hbar!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.hbar!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.hbar!","text":"hbar!(\n    plot       :: Models.Plot,\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    height     :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 1.0,\n    right      :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"right\",\n    left       :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 0.0;\n    kwa...\n)\n\nAdds a HBar glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.hextile!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.hextile!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.hextile!","text":"hextile!(\n    plot       :: Models.Plot,\n    q          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"q\",\n    r          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"r\";\n    kwa...\n)\n\nAdds a HexTile glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.image!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.image!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.image!","text":"image!(\n    plot       :: Models.Plot,\n    image      :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"image\",\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    dw         :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"dw\",\n    dh         :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"dh\",\n    dilate     :: Union{Bool, AbstractArray}                         = false;\n    kwa...\n)\n\nAdds a Image glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.imagergba!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.imagergba!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.imagergba!","text":"imagergba!(\n    plot       :: Models.Plot,\n    image      :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"image\",\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    dw         :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"dw\",\n    dh         :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"dh\",\n    dilate     :: Union{Bool, AbstractArray}                         = false;\n    kwa...\n)\n\nAdds a ImageRGBA glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.imageurl!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.imageurl!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.imageurl!","text":"imageurl!(\n    plot       :: Models.Plot,\n    url        :: Union{BokehServer.Model.StringSpec, AbstractArray} = (field = \"url\",),\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    w          :: Union{Nothing, BokehServer.Model.DistanceSpec, AbstractArray} = nothing,\n    h          :: Union{Nothing, BokehServer.Model.DistanceSpec, AbstractArray} = nothing,\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0,\n    dilate     :: Union{Bool, AbstractArray}                         = false;\n    kwa...\n)\n\nAdds a ImageURL glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"LINE","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.line!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.line!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.line!","text":"line!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\";\n    kwa...\n)\n\nAdds a Line glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.linestack!","category":"page"},{"location":"#BokehServer.Plotting.Stacks.linestack!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.Stacks.linestack!","text":"Generate multiple line renderers for levels stacked either left to right or bottom to top.\n\nThe user must provide values for both x and y. Only one of these may be a list of fields.\n\nExample\n\nplot = BokehServer.figure()\nrenderers = linestack!(plot; x = [\"a\", \"b\", \"c\"], y = 0, source = Dict(\"a\"=>[1,2], \"b\" => [3,4], \"c\"=>[5, 6]))\n@assert renderers isa Vector{BokehServer.Models.GlyphRenderer}\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"MULTILINE","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.multiline!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.multiline!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.multiline!","text":"multiline!(\n    plot       :: Models.Plot,\n    xs         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"xs\",\n    ys         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"ys\";\n    kwa...\n)\n\nAdds a MultiLine glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.multipolygons!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.multipolygons!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.multipolygons!","text":"multipolygons!(\n    plot       :: Models.Plot,\n    xs         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"xs\",\n    ys         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"ys\";\n    kwa...\n)\n\nAdds a MultiPolygons glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.patches!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.patches!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.patches!","text":"patches!(\n    plot       :: Models.Plot,\n    xs         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"xs\",\n    ys         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"ys\";\n    kwa...\n)\n\nAdds a Patches glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.quad!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.quad!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.quad!","text":"quad!(\n    plot       :: Models.Plot,\n    left       :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"left\",\n    right      :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"right\",\n    top        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"top\",\n    bottom     :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"bottom\";\n    kwa...\n)\n\nAdds a Quad glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.quadratic!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.quadratic!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.quadratic!","text":"quadratic!(\n    plot       :: Models.Plot,\n    x0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x0\",\n    y0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y0\",\n    x1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x1\",\n    y1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y1\",\n    cx         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cx\",\n    cy         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"cy\";\n    kwa...\n)\n\nAdds a Quadratic glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ray!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.ray!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.ray!","text":"ray!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    length     :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = 0.0,\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0;\n    kwa...\n)\n\nAdds a Ray glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.rect!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.rect!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.rect!","text":"rect!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    width      :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"width\",\n    height     :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"height\",\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0,\n    dilate     :: Union{Bool, AbstractArray}                         = false;\n    kwa...\n)\n\nAdds a Rect glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.scatter!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.scatter!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.scatter!","text":"scatter!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    size       :: Union{BokehServer.Model.SizeSpec, AbstractArray}   = 4.0,\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0,\n    marker     :: Union{BokehServer.Model.MarkerSpec, AbstractArray} = :circle;\n    kwa...\n)\n\nAdds a Scatter glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.segment!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.segment!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.segment!","text":"segment!(\n    plot       :: Models.Plot,\n    x0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x0\",\n    y0         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y0\",\n    x1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x1\",\n    y1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y1\";\n    kwa...\n)\n\nAdds a Segment glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.text!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.text!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.text!","text":"text!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    text       :: Union{BokehServer.Model.StringSpec, AbstractArray} = (field = \"text\",),\n    angle      :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = 0.0,\n    x_offset   :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 0.0,\n    y_offset   :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 0.0;\n    kwa...\n)\n\nAdds a Text glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.varea!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.varea!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.varea!","text":"varea!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y1         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y1\",\n    y2         :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y2\";\n    kwa...\n)\n\nAdds a VArea glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.vbar!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.vbar!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.vbar!","text":"vbar!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    width      :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 1.0,\n    top        :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"top\",\n    bottom     :: Union{BokehServer.Model.NumberSpec, AbstractArray} = 0.0;\n    kwa...\n)\n\nAdds a VBar glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.wedge!","category":"page"},{"location":"#BokehServer.Plotting.GlyphPlotting.wedge!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.GlyphPlotting.wedge!","text":"wedge!(\n    plot       :: Models.Plot,\n    x          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"x\",\n    y          :: Union{BokehServer.Model.NumberSpec, AbstractArray} = \"y\",\n    radius     :: Union{BokehServer.Model.DistanceSpec, AbstractArray} = \"radius\",\n    start_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"start_angle\",\n    finish_angle :: Union{BokehServer.Model.AngleSpec, AbstractArray}  = \"end_angle\",\n    direction  :: Union{BokehServer.Model.EnumType{(:clock, :anticlock)}, AbstractArray} = :anticlock;\n    kwa...\n)\n\nAdds a Wedge glyph to the Plot\n\n\n\n\n\n","category":"function"},{"location":"#Layouts","page":"BokehServer: a Bokeh server in Julia","title":"Layouts","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Multiple plots can be displayed together using:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.layout","category":"page"},{"location":"#BokehServer.Plotting.Layouts.layout","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Plotting.Layouts.layout","text":"layout(\n    children::AbstractVector{<:Models.iLayoutDOM};\n    nrow  :: Union{Int, Nothing} = nothing,\n    ncols :: Union{Int, Nothing} = nothing,\n    kwa...\n)\nlayout(children::AbstractArray; kwa...)\n\nConveniently create a grid of layoutable objects.\n\nGrids are created by using GridBox model. This gives the most control over the layout of a grid, but is also tedious and may result in unreadable code in practical applications. grid() function remedies this by reducing the level of control, but in turn providing a more convenient API.\n\nSupported patterns:\n\nNested arrays of layoutable objects. Assumes vectors are for rows, 1xN matrixes, are for columns. NxM matrixes are viewed as a vector of rows.\njulia> grid([p1, [[p2, p3]', p4]']) GridBox(children=[     (p1, 0, 0, 1, 2),     (p2, 1, 0, 1, 1),     (p3, 2, 0, 1, 1),     (p4, 1, 1, 2, 1), ])\n** warning ** The adjoint operator ' is recursive. A non-recursive code would be [p1, permutedims([[p2, p3], p4])].\nFlat list of layoutable objects. This requires nrows and/or ncols to be set. The input list will be rearranged into a 2D array accordingly. One can use None for padding purpose.\njulia> grid([p1, p2, p3, p4], ncols=2) GridBox(children=[     (p1, 0, 0, 1, 1),     (p2, 0, 1, 1, 1),     (p3, 1, 0, 1, 1),     (p4, 1, 1, 1, 1), ])\n\nKeywords are the same as for layout(children::AbstractVector{<:LayoutEntry})\n\n\n\n\n\nlayout(\n    children         :: AbstractVector{<:LayoutPlotEntry};\n    sizing_mode      :: Union{Nothing, SizingModeType} = :fixed,\n    toolbar_location :: Union{Nothing, LocationType}   = :above,\n    width            :: Union{Nothing, Int}            = nothing,\n    height           :: Union{Nothing, Int}            = nothing,\n    toolbar_options  :: Any                            = (;)\n)\n\nCreate a layout of plots. Toolbars will be merged by default.\n\nKeywords:\n\nsizing_mode: the sizing mode for each child, which is left untouched if nothing is given.\ntoolbar_location: the merged toolbar position. Use nothing to remove it\nwidth: each plot width,\nheight: each plot height,\ntoolbar_options: toolbar options to use for creating the merged toolbar\n\n\n\n\n\nlayout(\n    children    :: AbstractVector{<:LayoutDOMEntry};\n    sizing_mode :: Union{Nothing, SizingModeType} = nothing,\n    width       :: Union{Nothing, Int}            = nothing,\n    height      :: Union{Nothing, Int}            = nothing,\n)\n\nCreate a layout of any layoutable object (plots, widgets...).\n\nKeywords:\n\nsizing_mode: the sizing mode for each child, which is left untouched if nothing is given.\nwidth: each item width,\nheight: each item height,\n\n\n\n\n\n","category":"function"},{"location":"#Document-roots","page":"BokehServer: a Bokeh server in Julia","title":"Document roots","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"As in Bokeh, users can add and remove roots from a Document. This can be done  using functions push!(::iDocument, ::iModel) and pop!(::iDocument, ::iModel):","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"doc = BokehServer.Document()\nfig = BokehServer.figure()\npush!(doc, fig)\n@assert length(doc) == 1\npop!(doc, fig)\n@assert length(doc) == 0","category":"page"},{"location":"#Linking-axes","page":"BokehServer: a Bokeh server in Julia","title":"Linking axes","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Their axes can be linked, either using the event mechanisms or by sharing a Range1d object.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"plot1 = BokehServer.scatter(;\n    x       = randn(Float64, 100),\n    y       = randn(Float64, 100),\n)\nplot2 = BokehServer.scatter(;\n    x       = randn(Float64, 100),\n    y       = randn(Float64, 100),\n)\n\n# make sure plot2 reacts to plot1 mutations\nBokehServer.onchange(plot1.x_range) do evt::BokehServer.ModelChangedEvent\n    setproperty!(plot2.x_range, evt.attr, evt.new)\nend\n\n# make sure plot1 reacts to plot2 mutations\nBokehServer.onchange(plot2.x_range) do evt::BokehServer.ModelChangedEvent\n    setproperty!(plot1.x_range, evt.attr, evt.new)\nend\n\nBokehServer.layout([plot1, plot2])","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"plot1 = BokehServer.scatter(;\n    x       = randn(Float64, 100),\n    y       = randn(Float64, 100),\n    x_range = BokehServer.Range1d(; start = -10, finish = 10)\n)\nplot2 = BokehServer.scatter(;\n    x       = randn(Float64, 100),\n    y       = randn(Float64, 100),\n    x_range = plot1.x_range\n)\nBokehServer.layout([plot1, plot2])","category":"page"},{"location":"#The-ColumnDataSource-structure","page":"BokehServer: a Bokeh server in Julia","title":"The ColumnDataSource structure","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"As in Bokeh, the ColumnDataSource structure is central to updating plots. The same methods are available for dealing with its mutations:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Source","category":"page"},{"location":"#BokehServer.Models.Source","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.Source","text":"Source(args::Vararg{Pair{<:AbstractString, <:AbstractVector}}; kwa...)\n\nCreate a ColumnDataSource.\n\nColumns can be specified using either or both positional and keyword arguments. Keyword arguments which are not a ColumnDataSource field name are considered to be a \n\nCDS = Source(\"x\" => 1:5; y = 1:5, selection_policy = IntersectRenderers())\n@assert \"x\" ∈ keys(CDS.data)\n@assert \"y\" ∈ keys(CDS.data)\n@assert CDS.selection_policy isa IntersectRenderers\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.stream!","category":"page"},{"location":"#BokehServer.Model.stream!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Model.stream!","text":"stream!(\n        γ         :: Union{ColumnDataSource, DataDictContainer},\n        𝑑s        :: Vararg{DataDictArg};\n        rollover  :: Union{Int, Nothing} = nothing,\n)\n\nAdd rows to the ColumnDataSource.\n\n𝑑s can be of dictionnaries or pairs (column name, new data). \nrollover indicates maximum number of rows after the rows are added. Oldest\n\nrows are deleted as required.\n\nDS = BokehServer.ColumnDataSource(; data = Dict(\"x\" => [1, 2], \"y\" => [3, 4]))\n\nBokehServer.stream!(DS, \"x\" => [3], \"y\" => [4])\n@assert length(DS.data[\"x\"]) == 3\n\nBokehServer.stream!(DS, Dict(\"x\" => [4], \"y\" => [5]))\n@assert length(DS.data[\"x\"]) == 4\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.update!","category":"page"},{"location":"#BokehServer.Model.update!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Model.update!","text":"update!(\n    γ::Union{ColumnDataSource, DataDictContainer},\n    𝑑s::Vararg{Dict{String, Vector}}\n)\n\nAdds or replaces columns.\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.patch!","category":"page"},{"location":"#BokehServer.Model.patch!","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Model.patch!","text":"patch!(\n    γ::Union{ColumnDataSource, DataDictContainer},\n    patches::Vararg{Pair{String, Pair}}\n)\npatch!(\n    γ::Union{ColumnDataSource, DataDictContainer},\n    patches::Vararg{Dict{String, Vector{Pair}}}\n)\n\nUpdates values within existing columns.\n\nx = DataDictContainer(Dict(\"a\" => [1, 2, 3]))\n\nBokehServer.patch!(x, \"a\" => 2 => 10)\n@assert x[\"a\"] == [1, 10, 3] \n\nBokehServer.patch!(x, Dict(\"a\" => [1 => 5, 2:3 => 10]))\n@assert x[\"a\"] == [5, 10, 10] \n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"note: Note\nOne can also use Base.push! instead of Base.stream!.One can also use Base.merge! instead of Base.update! or Base.patch!.","category":"page"},{"location":"#The-event-mechanism","page":"BokehServer: a Bokeh server in Julia","title":"The event mechanism","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"As with Bokeh events can be both triggered from and dealt with both in typescript and Julia.","category":"page"},{"location":"#Creating-callbacks-in-*Julia*","page":"BokehServer: a Bokeh server in Julia","title":"Creating callbacks in Julia","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Julia event callbacks are created using BokehServer.onchange:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.onchange","category":"page"},{"location":"#BokehServer.Events.onchange","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.onchange","text":"onchange(func::Function, model::iDocument)\n\nAdds a Julia callback to a document-level event.\n\nThe function must have a single positional argument. Specifying an event type allows triggering the callback on that specific event type only.\n\nExamples\n\ndoc = BokehServer.Document\n\n# Add a callback for every type of event.\nonchange(doc) do evt\n    @assert evt isa BokehServer.Events.iDocEvent\n    println(\"callback 1: any doc events\")\nend\n\n# Add a callback for `RootAddedEvent` only\nonchange(doc) do evt::BokehServer.RootAddedEvent\n    @assert evt isa BokehServer.RootAddedEvent\n    println(\"callback 2: only RootAddedEvent\")\nend\n\n# now trigger the events\nBokehServer.Events.eventlist!() do\n    push!(doc, Model1())\n    delete!(doc, Model2())\nend\n\nwill outputs\n\ncallback 1: any doc events\ncallback 2: only RootAddedEvent\ncallback 1: any doc events\n\n\n\n\n\nonchange(func::Function, model::iModel)\n\nAdds a Julia callback to a model-level event.\n\nThe function can have two different signatures:\n\ncallback(evt [::X]) where specifying X allows triggering on a specific event type.\ncallback(model [::iModel], attribute [::Symbol], old [::A], new [::B]) where\n\nspecifying A or B allows triggering on a specific field type.\n\n** Warning ** Using an incorrect type in the signature can result in callback being silently ignored.\n\nExamples\n\nobj = Model()\n\n# Add a callback triggered by every type of event\nonchange(obj) do evt\n    @assert evt isa BokehServer.Events.iDocModelEvent\n    println(\"callback 1: receive events\")\nend\n\n# Add a callback triggered by `BokehServer.ModelChangedEvent` only.\nonchange(obj) do model, attr, old, new\n    println(\"callback 2: just sugar\")\nend\n\n# Add a callback triggered by `BokehServer.ModelChangedEvent` only, where a\n# `Float64` is the new value.\nonchange(obj) do model, attr, old, new::Float64\n    @assert new isa Float64\n    println(\"callback 3: a specific type for `new`\")\nend\n\n# now trigger the events\nBokehServer.Events.eventlist!() do\n    obj.a = 1\n    obj.a = 10.\nend\n\nwill outputs\n\ncallback 1: receive events\ncallback 2: just sugar\ncallback 1: receive events\ncallback 2: just sugar\ncallback 3: a specific type for `new`\n\n\n\n\n\n","category":"function"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"As can be seen in the examples:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Events are triggered on Document or Model instances.\nOne can use event types in the signature to filter which events","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"should trigger a given callback.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Document event types are:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.RootAddedEvent","category":"page"},{"location":"#BokehServer.Events.RootAddedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.RootAddedEvent","text":"Event triggered on a BokehServer.Document when a root is added to it.\n\nFields:\n\ndoc::iDocument: the mutated document\nroot::iModel: the root added to the document\nindex::Int: the root index in the list of roots.\n\nSupertypes: RootAddedEvent <: iDocRootEvent <: iDocEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.RootRemovedEvent","category":"page"},{"location":"#BokehServer.Events.RootRemovedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.RootRemovedEvent","text":"Event triggered on a BokehServer.Document when a root is removed to it.\n\nFields:\n\ndoc::iDocument: the mutated document\nroot::iModel: the root removed to the document\nindex::Int: the root index in the list of roots.\n\nSupertypes: RootRemovedEvent <: iDocRootEvent <: iDocEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.TitleChangedEvent","category":"page"},{"location":"#BokehServer.Events.TitleChangedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.TitleChangedEvent","text":"Event triggered on a BokehServer.Document when the HTML document title is changed.\n\nFields:\n\ndoc::iDocument: the mutated document\ntitle::String: the new title\n\nSupertypes: TitleChangedEvent <: iDocEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Model event types are:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ModelChangedEvent","category":"page"},{"location":"#BokehServer.Events.ModelChangedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.ModelChangedEvent","text":"Event triggered by a mutated field in an iHasProps instance.\n\nFields:\n\nmodel::iModel: the mutated instance\nattr::Symbol: the mutated field name\nold::Any: the previous field value\nnew::Any: the currnet field value\n\nSupertypes: ModelChangedEvent <: iDocModelEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ColumnsPatchedEvent","category":"page"},{"location":"#BokehServer.Events.ColumnsPatchedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.ColumnsPatchedEvent","text":"Event triggered by a calling BokehServer.patch! on a BokehServer.Models.ColumnDataSource, i.e, by mutating parts of the data in a the ColumnDataSource.\n\nFields:\n\nmodel::iModel: the mutated instance\nattr::Symbol: the mutated field name (always :data)\npatches::Dict{String, Vector{Pair}}: the patches applied\n\nSupertypes: ColumnsPatchedEvent <: iDataSourceEvent <: iDocModelEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ColumnsStreamedEvent","category":"page"},{"location":"#BokehServer.Events.ColumnsStreamedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.ColumnsStreamedEvent","text":"Event triggered by a calling BokehServer.stream! on a BokehServer.Models.ColumnDataSource, i.e, by adding rows to the ColumnDataSource.\n\nFields:\n\nmodel::iModel: the mutated instance\nattr::Symbol: the mutated field name (always :data)\ndata::DataDict: columns added to the ColumnDataSource\nrollover::Union{Nothing, Int}: the rollover which was applied\n\nSupertypes: ColumnsStreamedEvent <: iDataSourceEvent <: iDocModelEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ColumnDataChangedEvent","category":"page"},{"location":"#BokehServer.Events.ColumnDataChangedEvent","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Events.ColumnDataChangedEvent","text":"Event triggered by a calling BokehServer.update! on a BokehServer.Models.ColumnDataSource, i.e, by adding columns to the ColumnDataSource.\n\nFields:\n\nmodel::iModel: the mutated instance\nattr::Symbol: the mutated field name (always :data)\ndata::DataDict: columns added to the ColumnDataSource\n\nSupertypes: ColumnDataChangedEvent <: iDataSourceEvent <: iDocModelEvent <: iEvent\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"UI event types are:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.DocumentReady","category":"page"},{"location":"#BokehServer.Models.UIEvents.DocumentReady","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.DocumentReady","text":"Announce when a Document is fully idle.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.ButtonClick","category":"page"},{"location":"#BokehServer.Models.UIEvents.ButtonClick","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.ButtonClick","text":"Announce a button click event on a BokehServer button widget.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.MenuItemClick","category":"page"},{"location":"#BokehServer.Models.UIEvents.MenuItemClick","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.MenuItemClick","text":"Announce a button click event on a BokehServer menu item.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.LODStart","category":"page"},{"location":"#BokehServer.Models.UIEvents.LODStart","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.LODStart","text":"Announce the start of \"interactive level-of-detail\" mode on a plot.\n\nDuring interactive actions such as panning or zooming, BokehServer can optionally, temporarily draw a reduced set of the data, in order to maintain high interactive rates. This is referred to as interactive Level-of-Detail (LOD) mode. This event fires whenever a LOD mode has just begun.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.LODEnd","category":"page"},{"location":"#BokehServer.Models.UIEvents.LODEnd","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.LODEnd","text":"Announce the end of \"interactive level-of-detail\" mode on a plot.\n\nDuring interactive actions such as panning or zooming, BokehServer can optionally, temporarily draw a reduced set of the data, in order to maintain high interactive rates. This is referred to as interactive Level-of-Detail (LOD) mode. This event fires whenever a LOD mode has just ended.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.RangesUpdate","category":"page"},{"location":"#BokehServer.Models.UIEvents.RangesUpdate","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.RangesUpdate","text":"Announce combined range updates in a single event.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nx0::Float64: start x-coordinate for the default x-range\nx1::Float64: end x-coordinate for the default x-range\ny0::Float64: start x-coordinate for the default y-range\ny1::Float64: end y-coordinate for the default x-range\n\nCallbacks may be added to range start and end properties to respond to range changes, but this can result in multiple callbacks being invoked for a single logical operation (e.g. a pan or zoom). This event is emitted by supported tools when the entire range update is complete, in order to afford a single event that can be responded to.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.SelectionGeometry","category":"page"},{"location":"#BokehServer.Models.UIEvents.SelectionGeometry","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.SelectionGeometry","text":"Announce the coordinates of a selection event on a plot.\n\nFields:\n\nmodel::iModel: the model affected by the event\ngeometry::DICT: a dictionary containing the coordinates of the selection\n\nevent.\n\nfinal::BOOL: whether the selection event is the last selection event in the\n\ncase of selections on every mousemove.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Reset","category":"page"},{"location":"#BokehServer.Models.UIEvents.Reset","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Reset","text":"Announce a button click event on a plot ResetTool. \n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Tap","category":"page"},{"location":"#BokehServer.Models.UIEvents.Tap","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Tap","text":"Announce a Tap event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.DoubleTap","category":"page"},{"location":"#BokehServer.Models.UIEvents.DoubleTap","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.DoubleTap","text":"Announce a DoubleTap event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Press","category":"page"},{"location":"#BokehServer.Models.UIEvents.Press","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Press","text":"Announce a Press event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.PressUp","category":"page"},{"location":"#BokehServer.Models.UIEvents.PressUp","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.PressUp","text":"Announce a PressUp event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.MouseEnter","category":"page"},{"location":"#BokehServer.Models.UIEvents.MouseEnter","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.MouseEnter","text":"Announce a MouseEnter event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.MouseLeave","category":"page"},{"location":"#BokehServer.Models.UIEvents.MouseLeave","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.MouseLeave","text":"Announce a MouseLeave event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.MouseMove","category":"page"},{"location":"#BokehServer.Models.UIEvents.MouseMove","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.MouseMove","text":"Announce a MouseMove event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.PanEnd","category":"page"},{"location":"#BokehServer.Models.UIEvents.PanEnd","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.PanEnd","text":"Announce a PanEnd event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.PanStart","category":"page"},{"location":"#BokehServer.Models.UIEvents.PanStart","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.PanStart","text":"Announce a PanStart event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.PinchStart","category":"page"},{"location":"#BokehServer.Models.UIEvents.PinchStart","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.PinchStart","text":"Announce a PinchStart event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Rotate","category":"page"},{"location":"#BokehServer.Models.UIEvents.Rotate","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Rotate","text":"Announce a Rotate event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.RotateStart","category":"page"},{"location":"#BokehServer.Models.UIEvents.RotateStart","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.RotateStart","text":"Announce a RotateStart event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.RotateEnd","category":"page"},{"location":"#BokehServer.Models.UIEvents.RotateEnd","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.RotateEnd","text":"Announce a RotateEnd event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.MouseWheel","category":"page"},{"location":"#BokehServer.Models.UIEvents.MouseWheel","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.MouseWheel","text":"Announce a mouse wheel event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\ndelta::Float64: the (signed) scroll speed\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\nNote By default, BokehServer plots do not prevent default scroll events unless a    WheelZoomTool or WheelPanTool is active. This may change in     future releases.\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Pan","category":"page"},{"location":"#BokehServer.Models.UIEvents.Pan","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Pan","text":"Announce a pan event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\ndelta_x::Float64: the amount of scroll in the x direction\ndelta_y::Float64: the amount of scroll in the y direction\ndirection::Float64: the direction of scroll (1 or -1)\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\n\n\n\n\n","category":"type"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer.Pinch","category":"page"},{"location":"#BokehServer.Models.UIEvents.Pinch","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Models.UIEvents.Pinch","text":"Announce a pinch event on a BokehServer plot.\n\nFields:\n\nmodel::iPlot: the plot affected by the event\nscale::Float64: the (signed) amount of scaling\nsx::Float64: x-coordinate of the event in screen space\nsy::Float64: y-coordinate of the event in screen space\nx::Float64: x-coordinate of the event in data space\ny::Float64: y-coordinate of the event in data space\n\nNote This event is only applicable for touch-enabled devices.\n\n\n\n\n\n","category":"type"},{"location":"#Details","page":"BokehServer: a Bokeh server in Julia","title":"Details","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Events can only be triggered if an event manager has been provided. This is normally done automatically, although, as in Bokeh, only is specific cases:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"when initializing a new document\nwhen responding to a typescript message\nwhen in a Pluto or Jupyter environment, for cells coming after a call to BokehServer.Embeddings.notebook().","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"As opposed to Bokeh, event managers collect all events before triggering callback and finally synchronizing with typescript. Some events might disappear at any point during collection or callbacks, say if a document root is mutated then simply removed from the document.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"The collection is done thanks to a task-specific manager, hidden inside the task_local_storage() dictionnary.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Advanced users could change the manager behavior by creating custom BokehServer.Server.Application types, overloading Server.eventlist(::iApplication), and providing instances of these applications to the server. An example is the BokehServer.Embeddings.Notebooks.NotebookApp which deals with the specifics of working in Pluto or Jupyter environment.","category":"page"},{"location":"#Javascript-callbacks","page":"BokehServer: a Bokeh server in Julia","title":"Javascript callbacks","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Users can provide javascript code, to be executed client-side. This is done using a CustomJS object. The latter is then provided to the model triggering the change. One or both these actions can be done using:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"js_onchange","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"js_onevent","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"@js_link","category":"page"},{"location":"#Themes","page":"BokehServer: a Bokeh server in Julia","title":"Themes","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Themes provided by Bokeh are also available here.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"One can set either a global theme or one specific to a document:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"# set the global theme\nBokehServer.Themes.setvalues!(:caliber) # or :dark_minimal, :light_minimal, :contrast, :night_sky or :default\n\n# set the doc theme\nBokehServer.Themes.setvalues!(mydoc.theme, :caliber)","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"In most cases where user creates new BokehServer objects, a default document has been added to the task_local_storage dictionnary, and its theme is the one applied to those objects.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"note: Note\nA new document always inherits a copy of the current global theme.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Modules = [BokehServer.Themes]","category":"page"},{"location":"#BokehServer.Themes.THEME","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.THEME","text":"THEME :: Theme: the default theme\n\n\n\n\n\n","category":"constant"},{"location":"#BokehServer.Themes.Theme","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.Theme","text":"A structure containing theme defaults.\n\nOne can create a theme by providing a path to a JSON file or the name of a python bokeh theme.\n\n\n\n\n\n","category":"type"},{"location":"#BokehServer.Themes.changetheme!-Tuple{BokehServer.AbstractTypes.iHasProps, BokehServer.Themes.Theme}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.changetheme!","text":"changetheme!(obj::iHasProps, dic::Theme)\n\nUpdates obj such that it now conforms to theme dic\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.read!-Tuple{BokehServer.Themes.Theme, AbstractString}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.read!","text":"read!(dic::Theme, io::IO; empty::Bool = true)\nread!(dic::Theme, path::AbstractString; empty::Bool = true)\nread!(dic::Theme, name::Symbol)\n\nApplies a JSON or python theme file to the dic.\n\nSymbols can be :caliber, :contrast, :darkminimal, :lightminimal, :night_sky and  correspond to python bokeh options\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.setvalue!-Tuple{BokehServer.Themes.Theme, Symbol, Symbol, Any}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.setvalue!","text":"setvalue!([dic::Theme = THEME,] cls::Symbol, attr::Symbol, val)\n\nAdds a default value function val to theme dic for type cls and field attr\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.setvalues!-Tuple{BokehServer.Themes.Theme, Union{AbstractString, Symbol}}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.setvalues!","text":"setvalues!([theme::Theme = THEME,] name::Union{AbstractString, Symbol, AbstractDict, Nothing})\n\nSets the generic theme to new values\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.setvalues!-Tuple{Function, BokehServer.Themes.Theme, Any}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.setvalues!","text":"setvalues!(𝐹::Function, [theme::Theme = THEME,] name)\n\nSets the theme to new values for the duration of 𝐹.\n\nNote This is not thread-safe.\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.theme-Tuple{BokehServer.Themes.Theme, Type, Symbol}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.theme","text":"theme([dic::Theme,] T::Type, attr::Symbol)\n\nRetrieves a default value from theme dic for type cls and field attr. This is done by looking through all supertypes for cls\n\n\n\n\n\n","category":"method"},{"location":"#BokehServer.Themes.theme-Tuple{BokehServer.Themes.Theme, Type}","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer.Themes.theme","text":"theme([dic::Theme,] T::Type)\n\nCreates a default object given the (current) theme\n\n\n\n\n\n","category":"method"},{"location":"#Custom-models","page":"BokehServer: a Bokeh server in Julia","title":"Custom models","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Custom models can be created and used. Examples are in the examples/extensions directory.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"These models should follow the following pattern","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"@BokehServer.model mutable struct MyModel <: BokehServer.iModel\n    __implementation__ = \"path to typescript, relative to current code directory\"\n\n    a :: Int = 10\n    b :: Vector{Float64} =  [1., 2., 3.]\nend","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Typescript code is required as well. The user is invited to refer to python Bokeh. Other fields __javascript__, __css__, __dependencies__ can also be used. Again, better documentation is available in the python library.","category":"page"},{"location":"#Creating-a-template-of-a-derived-type","page":"BokehServer: a Bokeh server in Julia","title":"Creating a template of a derived type","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"The julia hierarchy system is very different from python's. In particular, one needs to redeclare all fields for every new structure. A template can be created as follows:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"julia> path = joinpath(dirname(pathof(BokehServer)), \"template.jl\")\njulia> run(`$path Slider`)  # Slider or any python Bokeh model class name","category":"page"},{"location":"#The-package-architecture","page":"BokehServer: a Bokeh server in Julia","title":"The package architecture","text":"","category":"section"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"BokehServer provides the same services Bokeh:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"Means for mirroring the typescript library bokehjs.\nAn event mechanism for reacting to changes to the Julia objects.\nA websocket server for synchronizing objects between Julia and typescript.","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"The code is divided in:","category":"page"},{"location":"","page":"BokehServer: a Bokeh server in Julia","title":"BokehServer: a Bokeh server in Julia","text":"a core directory which provides:\nmacros for mirroring javascript objects, namely @model, see the core/model directory.\nsome type extensions and conversions mechanisms for seemlessly converting typescript values to Julia, namely bokehconvert, see the core/model/properties directory.\nan event mechanism for reacting to changes in objects wrapped with @model, see core/events\na server, see core/server and its protocol, see core/protocol for dealing with synchronisation.\na models directory, created by automatically parsing the python code. It contains all structures corresponding to typescript classes.\na plotting directory, providing a plotting interface.","category":"page"}]
}
