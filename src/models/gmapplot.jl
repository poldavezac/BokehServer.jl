#- file generated by BokehServer's 'CodeCreator': edit at your own risk! -#

@model mutable struct GMapPlot <: iGMapPlot

    above :: Vector{iRenderer} = iRenderer[]

    align :: Union{Tuple{Model.EnumType{(:start, :center, :end)}, Model.EnumType{(:start, :center, :end)}}, Model.EnumType{(:auto, :start, :center, :end)}} = :auto

    api_key :: Vector{UInt8}

    api_version :: String = "weekly"

    aspect_ratio :: Union{Nothing, Float64, Model.EnumType{(:auto,)}} = nothing

    aspect_scale :: Float64 = 1.0

    background_fill_alpha :: Model.Percent = 0.0

    background_fill_color :: Union{Nothing, Model.Color} = "#808080"

    below :: Vector{iRenderer} = iRenderer[]

    border_fill_alpha :: Model.Percent = 1.0

    border_fill_color :: Union{Nothing, Model.Color} = "#FFFFFF"

    center :: Vector{iRenderer} = iRenderer[]

    classes :: Vector{String} = String[]

    context_menu :: Union{Nothing, iMenu} = nothing

    css_classes :: Vector{String} = String[]

    disabled :: Bool = false

    extra_x_ranges :: Dict{String, iRange} = Dict{String, iRange}()

    extra_x_scales :: Dict{String, iScale} = Dict{String, iScale}()

    extra_y_ranges :: Dict{String, iRange} = Dict{String, iRange}()

    extra_y_scales :: Dict{String, iScale} = Dict{String, iScale}()

    flow_mode :: Model.EnumType{(:block, :inline)} = :block

    frame_align :: Union{Bool, NamedTuple{(:left, :right, :top, :bottom), NTuple{4, Bool}}} = true

    frame_height :: Union{Nothing, Int64} = nothing

    frame_width :: Union{Nothing, Int64} = nothing

    height :: Union{Nothing, Model.NonNegativeInt} = nothing

    height_policy :: Model.EnumType{(:auto, :fixed, :fit, :min, :max)} = :auto

    hidpi :: Bool = true

    hold_render :: Bool = false

    inner_height :: Model.ReadOnly{Int64} = 0

    inner_width :: Model.ReadOnly{Int64} = 0

    left :: Vector{iRenderer} = iRenderer[]

    lod_factor :: Int64 = 10

    lod_interval :: Int64 = 300

    lod_threshold :: Union{Nothing, Int64} = 2000

    lod_timeout :: Int64 = 500

    map_options :: iGMapOptions

    margin :: Union{Nothing, Int64, Tuple{Int64, Int64}, NTuple{4, Int64}} = nothing

    match_aspect :: Bool = false

    max_height :: Union{Nothing, Model.NonNegativeInt} = nothing

    max_width :: Union{Nothing, Model.NonNegativeInt} = nothing

    min_border :: Union{Nothing, Int64} = 5

    min_border_bottom :: Union{Nothing, Int64} = nothing

    min_border_left :: Union{Nothing, Int64} = nothing

    min_border_right :: Union{Nothing, Int64} = nothing

    min_border_top :: Union{Nothing, Int64} = nothing

    min_height :: Union{Nothing, Model.NonNegativeInt} = nothing

    min_width :: Union{Nothing, Model.NonNegativeInt} = nothing

    outer_height :: Model.ReadOnly{Int64} = 0

    outer_width :: Model.ReadOnly{Int64} = 0

    outline_line_alpha :: Model.Percent = 1.0

    outline_line_cap :: Model.LineCap = :butt

    outline_line_color :: Union{Nothing, Model.Color} = "#000000"

    outline_line_dash :: Model.DashPattern = Int64[]

    outline_line_dash_offset :: Int64 = 0

    outline_line_join :: Model.LineJoin = :bevel

    outline_line_width :: Float64 = 1.0

    output_backend :: Model.EnumType{(:canvas, :svg, :webgl)} = :canvas

    renderers :: Vector{iRenderer} = iRenderer[]

    reset_policy :: Model.EnumType{(:standard, :event_only)} = :standard

    resizable :: Union{Bool, Model.EnumType{(:width, :height, :both)}} = false

    right :: Vector{iRenderer} = iRenderer[]

    sizing_mode :: Union{Nothing, Model.EnumType{(:stretch_width, :stretch_height, :stretch_both, :scale_width, :scale_height, :scale_both, :fixed)}} = nothing

    styles :: Union{iStyles, Dict{String, Union{Nothing, String}}} = Dict{String, Union{Nothing, String}}()

    stylesheets :: Vector{Union{Dict{String, Union{iStyles, Dict{String, Union{Nothing, String}}}}, String}} = Union{Dict{String, Union{iStyles, Dict{String, Union{Nothing, String}}}}, String}[]

    title :: Union{Nothing, iTitle} = Title(text = "")

    title_location :: Union{Nothing, Model.EnumType{(:above, :below, :left, :right)}} = :above

    toolbar :: iToolbar = Toolbar()

    toolbar_inner :: Bool = false

    toolbar_location :: Union{Nothing, Model.EnumType{(:above, :below, :left, :right)}} = :right

    toolbar_sticky :: Bool = true

    visible :: Bool = true

    width :: Union{Nothing, Model.NonNegativeInt} = nothing

    width_policy :: Model.EnumType{(:auto, :fixed, :fit, :min, :max)} = :auto

    x_range :: iRange = Range1d()

    x_scale :: iScale = LinearScale()

    y_range :: iRange = Range1d()

    y_scale :: iScale = LinearScale()
end
export GMapPlot
